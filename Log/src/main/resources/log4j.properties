# 配置日志级别，输出的位置
#指定RootLogger顶级父元素默认配置信息   指定日志的级别为Trace   使用的appender=console
log4j.rootLogger=trace,console,rollingFile

# 自定义logger对象设置
log4j.logger.log4j=info,file


# 指定控制台日志输出的appender
log4j.appender.console=org.apache.log4j.ConsoleAppender
# 指定消息格式 layout
#log4j.appender.console.layout=org.apache.log4j.SimpleLayout
log4j.appender.console.layout=org.apache.log4j.PatternLayout
#如果没有下载源代码，对应的.properties配置文件没有提示

#log4j.appender.console.layout.conversionPattern=%r [%t] %p %c %x - %m%n
log4j.appender.console.layout.conversionPattern= [%10p]%r  %l %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
# %m 输出代码中指定的日志信息
# %p 输出优先级，及DEBUG  INFO等
# %n 换行符（windows平台的换行符为"\n",Unix平台的为"\n"）
# %r 输出自应用启动到输出该log信息耗费的毫秒数
# %c 输出打印语句所属的类全名
# %t 输出产生该日志的线程全名
# %d 输出服务器当前时间，默认为ISO8601,也可以指定格式如：%d{yyyy年MM月dd日 HH:mm:ss}
# %l 输出日志时间发生位置，包括类名，线程及在代码中的行数，如Test.main(Test.java:10)
# %F 输出日志消息产生式所在的文件名称
# %L 输出代码中的行号
# %% 输出一个"%"字符


# 设置输出到文件的appender对象
log4j.appender.file=org.apache.log4j.FileAppender
#指定消息格式layout
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#指定消息格式内容
log4j.appender.file.layout.conversionPattern=[%-10p]%r  %l %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
#指定日志文件保存路径
log4j.appender.file.file=D:/goldstine/log4j.log
#指定日志文件的字符集
log4j.appender.file.encoding=UTF-8


# 按照文件大小进行拆分
# 设置输出到文件的appender对象
log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender
#指定消息格式layout
log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout
#指定消息格式内容
log4j.appender.rollingFile.layout.conversionPattern=[%-10p]%r  %l %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
#指定日志文件保存路径
log4j.appender.rollingFile.file=D:/goldstine/log4j.log
#指定日志文件的字符集
log4j.appender.rollingFile.encoding=UTF-8
#指定日志文件内容大小
log4j.appender.rollingFile.maxFileSize=1MB
#指定日志文件的数量     每一个日志文件大小为1MB,超过1MB会存到另一个日志文件，超过10个日志文件，会按照时间进行覆盖
log4j.appender.rollingFile.maxBackupIndex=10


#按照时间规则拆分的appender对象
log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppender
#指定消息格式layout
log4j.appender.dailyFile.layout=org.apache.log4j.PatternLayout
#指定消息格式内容
log4j.appender.dailyFile.layout.conversionPattern=[%-10p]%r  %l %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
#指定日志文件保存路径
log4j.appender.dailyFile.file=D:/goldstine/log4j.log
#指定日志文件的字符集
log4j.appender.dailyFile.encoding=UTF-8
#指定日期拆分规则
log4j.appender.dailyFile.datePattern='.'yyyy-MM-dd-HH-mm-ss

#将日志数据输出到mysql数据库
#log4j.appender.logDB=org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.logDB.layout=org.apache.log4j.PatternLayout
#log4j.appender.logDB.Driver=com.mysql.jdbc.Driver
#log4j.appender.logDB.URL=jdbc:mysql://localhost:3306/test
#log4j.appender.logDB.User=root
#log4j.appender.logDB.Password=root
#对应的插入日志的sql语句，取决于数据表的设计
#log4j.appender.logDB.Sql=INSERT INTO log()

