<?xml version="1.0" encoding="UTF-8" ?>

<!--
    status="warn"日志框架本身的日志级别
    monitorInterval="5"   自动加载配置文件的间隔时间，不低于5秒
-->
<Configuration status="debug" monitorInterval="5">

    <!--集中配置属性进行管理,使用是通过${name}-->
    <properties>
        <property name="LOG_HOME">D:/goldstine</property>
    </properties>

    <!--日志处理器-->
    <Appenders>
        <!--控制台输出appender-->
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] [%-5level] %c{36}:%L --- %m%n"/>
        </Console>
        <!--日志文件输出appender-->
        <File name="file" fileName="${LOG_HOME}/myfile.log">
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36} --- %m%n"/>
        </File>

        <!--设置异步日志  -->
<!--        <Async name="Async">-->
<!--            <AppenderRef ref="file"/>  &lt;!&ndash;这个file就是上面的日志文件file  异步生成myfile.log&ndash;&gt;-->
<!--        </Async>-->

        <!--使用随机读写流的日志文件输出appedner,性能提高-->
        <RandomAccessFile name="accessFile" fileName="${LOG_HOME}/myAcclog.log">
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36} --- %m%n"/>
        </RandomAccessFile>

        <!--按照一定规则拆分的日志文件的appender-->
        <RollingFile name="rollingFile" fileName="${LOG_HOME}/myrollog.log" filePattern="/logs/$${date:yyyy-MM-dd}/myrollog-%d{yyyy-MM-dd-HH-mm}-%i.log">
            <!--日志级别的过滤器-->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--日志消息格式-->
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36} --- %m%n"/>
            <Policies>
                <!--在系统启动时，触发拆分规则，生成一个新的日志文件-->
                <OnStartupTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="10 MB"/>
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <!--在同一个目录下，文件的个数限定为30个，超过进行覆盖-->
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

    </Appenders>

    <!--logger定义-->
    <Loggers>

        <!--自定义异步Logger对象
            includeLocation="false"关闭日志记录的行号信息
            additivity="false"不在继承rootLogger对象
        -->
        <AsyncLogger name="log4j2" level="trace" includeLocation="false" additivity="false">
            <AppenderRef ref="file"/>
        </AsyncLogger>

        <!--使用rootLogger配置 日志级别  level="trace-->
        <Root level="trace">
            <!--指定日志使用的处理器-->
            <AppenderRef ref="Console"/>

            <!--使用异步的appender-->
<!--            <AppenderRef ref="Async"/>-->
        </Root>
    </Loggers>
</Configuration>